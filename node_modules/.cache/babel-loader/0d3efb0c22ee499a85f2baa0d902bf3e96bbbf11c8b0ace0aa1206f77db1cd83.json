{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krishang Darji\\\\OneDrive\\\\Desktop\\\\Mudravani1\\\\src\\\\components\\\\VideoCallPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { IconButton, Fab, Box, Typography } from \"@mui/material\";\nimport { FaMicrophone, FaMicrophoneAltSlash, FaVideo, FaVideoSlash, FaPhoneAlt } from \"react-icons/fa\";\nimport { v4 as uuidv4 } from \"uuid\"; // For generating unique room IDs\nimport styled from \"@emotion/styled\";\n\n// WebSocket client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = new WebSocket(\"ws://localhost:3000\"); // Connect to signaling server\n\n// Styled components (same as before)\nconst VideoContainer = styled(Box)(/* your styles */);\n_c = VideoContainer;\nconst LocalVideoWrapper = styled(Box)(/* your styles */);\n_c2 = LocalVideoWrapper;\nconst Video = styled(\"video\")(/* your styles */);\n_c3 = Video;\nconst ControlPanel = styled(Box)(/* your styles */);\n_c4 = ControlPanel;\nconst EndCallButton = styled(Fab)(/* your styles */);\n_c5 = EndCallButton;\nconst VideoCallPage = () => {\n  _s();\n  const [isMuted, setIsMuted] = useState(false);\n  const [isVideoOn, setIsVideoOn] = useState(true);\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const peerConnection = useRef(null);\n  const mediaStream = useRef(null);\n  const navigate = useNavigate();\n  const [roomLink, setRoomLink] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  useEffect(() => {\n    const id = uuidv4();\n    setRoomId(id); // Set room ID for this session\n    setRoomLink(window.location.href + id); // Set room link to share\n    startVideoCall(id);\n    return () => {\n      stopVideoCall(); // Cleanup on unmount\n    };\n  }, []);\n  const startVideoCall = async id => {\n    try {\n      // Get media stream\n      mediaStream.current = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n\n      // Set local video stream\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = mediaStream.current;\n      }\n\n      // Create PeerConnection\n      peerConnection.current = new RTCPeerConnection({\n        iceServers: [{\n          urls: \"stun:stun.l.google.com:19302\"\n        }]\n      });\n\n      // Add local media tracks to peer connection\n      mediaStream.current.getTracks().forEach(track => {\n        peerConnection.current.addTrack(track, mediaStream.current);\n      });\n\n      // Handle ICE candidate events\n      peerConnection.current.onicecandidate = event => {\n        if (event.candidate) {\n          socket.send(JSON.stringify({\n            type: \"candidate\",\n            candidate: event.candidate,\n            roomId: id\n          }));\n        }\n      };\n\n      // Set up the remote video stream when a track is received\n      peerConnection.current.ontrack = event => {\n        if (remoteVideoRef.current) {\n          remoteVideoRef.current.srcObject = event.streams[0];\n        }\n      };\n\n      // Create offer and set local description\n      const offer = await peerConnection.current.createOffer();\n      await peerConnection.current.setLocalDescription(offer);\n\n      // Send offer to signaling server\n      socket.send(JSON.stringify({\n        type: \"offer\",\n        offer,\n        roomId: id\n      }));\n      console.log(\"Video call started\");\n    } catch (error) {\n      console.error(\"Error starting video call:\", error);\n    }\n  };\n  const stopVideoCall = () => {\n    if (peerConnection.current) {\n      peerConnection.current.close();\n    }\n    if (mediaStream.current) {\n      mediaStream.current.getTracks().forEach(track => track.stop());\n    }\n    navigate(\"/VideoCallPage\");\n  };\n\n  // WebSocket message handler\n  useEffect(() => {\n    socket.onmessage = async event => {\n      const message = JSON.parse(event.data);\n      if (message.roomId === roomId) {\n        switch (message.type) {\n          case \"offer\":\n            await peerConnection.current.setRemoteDescription(new RTCSessionDescription(message.offer));\n            const answer = await peerConnection.current.createAnswer();\n            await peerConnection.current.setLocalDescription(answer);\n            socket.send(JSON.stringify({\n              type: \"answer\",\n              answer,\n              roomId: roomId\n            }));\n            break;\n          case \"answer\":\n            await peerConnection.current.setRemoteDescription(new RTCSessionDescription(message.answer));\n            break;\n          case \"candidate\":\n            await peerConnection.current.addIceCandidate(new RTCIceCandidate(message.candidate));\n            break;\n          default:\n            break;\n        }\n      }\n    };\n  }, [roomId]);\n  const toggleMute = () => {\n    setIsMuted(prev => !prev);\n    mediaStream.current.getAudioTracks().forEach(track => {\n      track.enabled = !track.enabled;\n    });\n  };\n  const toggleVideo = () => {\n    setIsVideoOn(prev => !prev);\n    mediaStream.current.getVideoTracks().forEach(track => {\n      track.enabled = !track.enabled;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      backgroundColor: \"#f5f5f5\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(VideoContainer, {\n      children: [/*#__PURE__*/_jsxDEV(LocalVideoWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          height: \"100%\",\n          maxWidth: \"1000px\",\n          backgroundColor: \"black\",\n          borderRadius: \"8px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          ref: remoteVideoRef,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleMute,\n        sx: {\n          backgroundColor: isMuted ? \"#b0bec5\" : \"#2196f3\",\n          borderRadius: \"50%\",\n          padding: \"10px\"\n        },\n        children: isMuted ? /*#__PURE__*/_jsxDEV(FaMicrophoneAltSlash, {\n          size: 20,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(FaMicrophone, {\n          size: 20,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleVideo,\n        sx: {\n          backgroundColor: isVideoOn ? \"#4caf50\" : \"#f44336\",\n          borderRadius: \"50%\",\n          padding: \"10px\"\n        },\n        children: isVideoOn ? /*#__PURE__*/_jsxDEV(FaVideo, {\n          size: 20,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(FaVideoSlash, {\n          size: 20,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EndCallButton, {\n        onClick: stopVideoCall,\n        children: /*#__PURE__*/_jsxDEV(FaPhoneAlt, {\n          size: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        position: \"fixed\",\n        bottom: \"80px\",\n        backgroundColor: \"#fff\",\n        padding: \"10px\",\n        borderRadius: \"5px\"\n      },\n      children: [\"Share this link to join: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: roomLink,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: roomLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCallPage, \"O9i58Q7d5z64lAmInpbl8YamQUM=\", false, function () {\n  return [useNavigate];\n});\n_c6 = VideoCallPage;\nexport default VideoCallPage;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"VideoContainer\");\n$RefreshReg$(_c2, \"LocalVideoWrapper\");\n$RefreshReg$(_c3, \"Video\");\n$RefreshReg$(_c4, \"ControlPanel\");\n$RefreshReg$(_c5, \"EndCallButton\");\n$RefreshReg$(_c6, \"VideoCallPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","IconButton","Fab","Box","Typography","FaMicrophone","FaMicrophoneAltSlash","FaVideo","FaVideoSlash","FaPhoneAlt","v4","uuidv4","styled","jsxDEV","_jsxDEV","socket","WebSocket","VideoContainer","_c","LocalVideoWrapper","_c2","Video","_c3","ControlPanel","_c4","EndCallButton","_c5","VideoCallPage","_s","isMuted","setIsMuted","isVideoOn","setIsVideoOn","localVideoRef","remoteVideoRef","peerConnection","mediaStream","navigate","roomLink","setRoomLink","roomId","setRoomId","id","window","location","href","startVideoCall","stopVideoCall","current","navigator","mediaDevices","getUserMedia","video","audio","srcObject","RTCPeerConnection","iceServers","urls","getTracks","forEach","track","addTrack","onicecandidate","event","candidate","send","JSON","stringify","type","ontrack","streams","offer","createOffer","setLocalDescription","console","log","error","close","stop","onmessage","message","parse","data","setRemoteDescription","RTCSessionDescription","answer","createAnswer","addIceCandidate","RTCIceCandidate","toggleMute","prev","getAudioTracks","enabled","toggleVideo","getVideoTracks","sx","display","flexDirection","alignItems","backgroundColor","height","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","width","maxWidth","borderRadius","onClick","padding","size","color","variant","position","bottom","target","rel","_c6","$RefreshReg$"],"sources":["C:/Users/Krishang Darji/OneDrive/Desktop/Mudravani1/src/components/VideoCallPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { IconButton, Fab, Box, Typography } from \"@mui/material\";\r\nimport { FaMicrophone, FaMicrophoneAltSlash, FaVideo, FaVideoSlash, FaPhoneAlt } from \"react-icons/fa\"; \r\nimport { v4 as uuidv4 } from \"uuid\"; // For generating unique room IDs\r\nimport styled from \"@emotion/styled\";\r\n\r\n// WebSocket client\r\nconst socket = new WebSocket(\"ws://localhost:3000\"); // Connect to signaling server\r\n\r\n// Styled components (same as before)\r\nconst VideoContainer = styled(Box)(/* your styles */);\r\nconst LocalVideoWrapper = styled(Box)(/* your styles */);\r\nconst Video = styled(\"video\")(/* your styles */);\r\nconst ControlPanel = styled(Box)(/* your styles */);\r\nconst EndCallButton = styled(Fab)(/* your styles */);\r\n\r\nconst VideoCallPage = () => {\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isVideoOn, setIsVideoOn] = useState(true);\r\n  const localVideoRef = useRef(null);\r\n  const remoteVideoRef = useRef(null);\r\n  const peerConnection = useRef(null);\r\n  const mediaStream = useRef(null);\r\n  const navigate = useNavigate();\r\n  const [roomLink, setRoomLink] = useState(\"\");\r\n  const [roomId, setRoomId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const id = uuidv4();\r\n    setRoomId(id); // Set room ID for this session\r\n    setRoomLink(window.location.href + id); // Set room link to share\r\n    startVideoCall(id);\r\n    \r\n    return () => {\r\n      stopVideoCall(); // Cleanup on unmount\r\n    };\r\n  }, []);\r\n\r\n  const startVideoCall = async (id) => {\r\n    try {\r\n      // Get media stream\r\n      mediaStream.current = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      });\r\n\r\n      // Set local video stream\r\n      if (localVideoRef.current) {\r\n        localVideoRef.current.srcObject = mediaStream.current;\r\n      }\r\n\r\n      // Create PeerConnection\r\n      peerConnection.current = new RTCPeerConnection({\r\n        iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n      });\r\n\r\n      // Add local media tracks to peer connection\r\n      mediaStream.current.getTracks().forEach((track) => {\r\n        peerConnection.current.addTrack(track, mediaStream.current);\r\n      });\r\n\r\n      // Handle ICE candidate events\r\n      peerConnection.current.onicecandidate = (event) => {\r\n        if (event.candidate) {\r\n          socket.send(JSON.stringify({\r\n            type: \"candidate\",\r\n            candidate: event.candidate,\r\n            roomId: id\r\n          }));\r\n        }\r\n      };\r\n\r\n      // Set up the remote video stream when a track is received\r\n      peerConnection.current.ontrack = (event) => {\r\n        if (remoteVideoRef.current) {\r\n          remoteVideoRef.current.srcObject = event.streams[0];\r\n        }\r\n      };\r\n\r\n      // Create offer and set local description\r\n      const offer = await peerConnection.current.createOffer();\r\n      await peerConnection.current.setLocalDescription(offer);\r\n\r\n      // Send offer to signaling server\r\n      socket.send(JSON.stringify({\r\n        type: \"offer\",\r\n        offer,\r\n        roomId: id,\r\n      }));\r\n      \r\n      console.log(\"Video call started\");\r\n    } catch (error) {\r\n      console.error(\"Error starting video call:\", error);\r\n    }\r\n  };\r\n\r\n  const stopVideoCall = () => {\r\n    if (peerConnection.current) {\r\n      peerConnection.current.close();\r\n    }\r\n    if (mediaStream.current) {\r\n      mediaStream.current.getTracks().forEach((track) => track.stop());\r\n    }\r\n    navigate(\"/VideoCallPage\");\r\n  };\r\n\r\n  // WebSocket message handler\r\n  useEffect(() => {\r\n    socket.onmessage = async (event) => {\r\n      const message = JSON.parse(event.data);\r\n\r\n      if (message.roomId === roomId) {\r\n        switch (message.type) {\r\n          case \"offer\":\r\n            await peerConnection.current.setRemoteDescription(new RTCSessionDescription(message.offer));\r\n            const answer = await peerConnection.current.createAnswer();\r\n            await peerConnection.current.setLocalDescription(answer);\r\n            socket.send(JSON.stringify({\r\n              type: \"answer\",\r\n              answer,\r\n              roomId: roomId,\r\n            }));\r\n            break;\r\n\r\n          case \"answer\":\r\n            await peerConnection.current.setRemoteDescription(new RTCSessionDescription(message.answer));\r\n            break;\r\n\r\n          case \"candidate\":\r\n            await peerConnection.current.addIceCandidate(new RTCIceCandidate(message.candidate));\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    };\r\n  }, [roomId]);\r\n\r\n  const toggleMute = () => {\r\n    setIsMuted((prev) => !prev);\r\n    mediaStream.current.getAudioTracks().forEach((track) => {\r\n      track.enabled = !track.enabled;\r\n    });\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    setIsVideoOn((prev) => !prev);\r\n    mediaStream.current.getVideoTracks().forEach((track) => {\r\n      track.enabled = !track.enabled;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", backgroundColor: \"#f5f5f5\", height: \"100vh\" }}>\r\n      <VideoContainer>\r\n        <LocalVideoWrapper>\r\n          <Video ref={localVideoRef} autoPlay muted />\r\n        </LocalVideoWrapper>\r\n        <Box sx={{ width: \"100%\", height: \"100%\", maxWidth: \"1000px\", backgroundColor: \"black\", borderRadius: \"8px\" }}>\r\n          <Video ref={remoteVideoRef} autoPlay />\r\n        </Box>\r\n      </VideoContainer>\r\n\r\n      <ControlPanel>\r\n        <IconButton onClick={toggleMute} sx={{ backgroundColor: isMuted ? \"#b0bec5\" : \"#2196f3\", borderRadius: \"50%\", padding: \"10px\" }}>\r\n          {isMuted ? <FaMicrophoneAltSlash size={20} color=\"white\" /> : <FaMicrophone size={20} color=\"white\" />}\r\n        </IconButton>\r\n        <IconButton onClick={toggleVideo} sx={{ backgroundColor: isVideoOn ? \"#4caf50\" : \"#f44336\", borderRadius: \"50%\", padding: \"10px\" }}>\r\n          {isVideoOn ? <FaVideo size={20} color=\"white\" /> : <FaVideoSlash size={20} color=\"white\" />}\r\n        </IconButton>\r\n        <EndCallButton onClick={stopVideoCall}>\r\n          <FaPhoneAlt size={25} />\r\n        </EndCallButton>\r\n      </ControlPanel>\r\n\r\n      {/* Display Room Link */}\r\n      <Typography variant=\"h6\" sx={{ position: \"fixed\", bottom: \"80px\", backgroundColor: \"#fff\", padding: \"10px\", borderRadius: \"5px\" }}>\r\n        Share this link to join: <a href={roomLink} target=\"_blank\" rel=\"noopener noreferrer\">{roomLink}</a>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VideoCallPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}