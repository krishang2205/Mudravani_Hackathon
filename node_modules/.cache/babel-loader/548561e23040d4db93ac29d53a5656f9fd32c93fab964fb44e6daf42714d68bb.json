{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krishang Darji\\\\OneDrive\\\\Desktop\\\\Mudravani1\\\\src\\\\components\\\\VideoCallPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, IconButton, Fab, Typography } from '@mui/material';\nimport { FaMicrophone, FaMicrophoneAltSlash, FaVideo, FaVideoSlash, FaPhoneAlt } from 'react-icons/fa';\nimport styled from '@emotion/styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoContainer = styled(Box)(() => ({\n  display: 'flex',\n  justifyContent: 'center',\n  gap: '20px',\n  position: 'relative',\n  width: '100%',\n  maxWidth: '1200px',\n  height: '500px'\n}));\n_c = VideoContainer;\nconst Video = styled('video')(() => ({\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  borderRadius: '8px'\n}));\n_c2 = Video;\nconst ControlPanel = styled(Box)(() => ({\n  position: 'fixed',\n  bottom: '20px',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  display: 'flex',\n  alignItems: 'center',\n  gap: '25px',\n  zIndex: 10,\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  padding: '10px',\n  borderRadius: '8px'\n}));\n_c3 = ControlPanel;\nconst EndCallButton = styled(Fab)(() => ({\n  backgroundColor: '#f44336',\n  color: '#fff',\n  padding: '15px',\n  fontSize: '20px',\n  '&:hover': {\n    backgroundColor: '#d32f2f'\n  }\n}));\n_c4 = EndCallButton;\nconst VideoCallPage = ({\n  roomId\n}) => {\n  _s();\n  const [isMuted, setIsMuted] = useState(false);\n  const [isVideoOn, setIsVideoOn] = useState(true);\n  const [recognizedText, setRecognizedText] = useState('');\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const peerConnection = useRef(null);\n  const mediaStream = useRef(null);\n  const socket = useRef(null);\n  const speechSynthesisRef = useRef(window.speechSynthesis);\n  useEffect(() => {\n    socket.current = new WebSocket('ws://localhost:3000');\n    socket.current.onopen = () => {\n      console.log('WebSocket connected');\n      startVideoCall(roomId);\n    };\n    socket.current.onmessage = message => {\n      const data = JSON.parse(message.data);\n      handleReceivedMessage(data);\n    };\n    socket.current.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    return () => {\n      if (socket.current) socket.current.close();\n    };\n  }, [roomId]);\n  useEffect(() => {\n    const interval = setInterval(captureFrame, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  const startVideoCall = async roomId => {\n    console.log('Starting video call for room:', roomId);\n    try {\n      mediaStream.current = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = mediaStream.current;\n      }\n    } catch (error) {\n      console.error('Error accessing media devices:', error);\n    }\n  };\n  const handleReceivedMessage = data => {\n    console.log('Received message:', data);\n    // Handle WebRTC signaling or other communication\n  };\n  const captureFrame = async () => {\n    if (!localVideoRef.current || localVideoRef.current.videoWidth === 0) return;\n    const canvas = document.createElement('canvas');\n    canvas.width = localVideoRef.current.videoWidth;\n    canvas.height = localVideoRef.current.videoHeight;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(localVideoRef.current, 0, 0, canvas.width, canvas.height);\n    const imageData = canvas.toDataURL('image/jpeg');\n    sendToSignRecognitionAPI(imageData);\n  };\n\n  //   const sendToSignRecognitionAPI = async (imageData) => {\n\n  //     try {\n  //       const response = await fetch('http://127.0.0.1:3005/predict', {\n  //         method: 'POST',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         body: JSON.stringify({ image: imageData }),\n  //       });\n\n  //       const data = await response.json();\n  //       if (data.text) {\n  //         setRecognizedText(data.text);\n  //         speakText(data.text);\n  //       }\n  //     } catch (error) {\n  //       console.error('Error sending frame:', error);\n  //     }\n  //   };\n\n  const sendToSignRecognitionAPI = async imageData => {\n    try {\n      console.log(\"Sending image data:\", imageData.substring(0, 50)); // Log only first 50 chars\n\n      const response = await fetch('http://192.168.26.125:3005/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          image: imageData\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`API Error: ${response.status} - ${response.statusText}`);\n      }\n      const data = await response.json();\n      if (data.text) {\n        setRecognizedText(data.text);\n        speakText(data.text);\n      }\n    } catch (error) {\n      console.error('Error sending frame:', error.message || error);\n    }\n  };\n  const speakText = text => {\n    if (!text) return;\n\n    // Stop any ongoing speech synthesis before starting a new one\n    speechSynthesisRef.current.cancel();\n    const speech = new SpeechSynthesisUtterance(text);\n    speech.lang = 'en-US'; // Set language for better pronunciation\n    speech.rate = 1; // Adjust speed if needed\n    speech.pitch = 1;\n    speech.volume = 1;\n    speechSynthesisRef.current.speak(speech);\n  };\n  const toggleMute = () => {\n    if (mediaStream.current) {\n      mediaStream.current.getAudioTracks().forEach(track => track.enabled = isMuted);\n    }\n    setIsMuted(!isMuted);\n  };\n  const toggleVideo = () => {\n    if (mediaStream.current) {\n      mediaStream.current.getVideoTracks().forEach(track => track.enabled = !isVideoOn);\n    }\n    setIsVideoOn(!isVideoOn);\n  };\n  const stopVideoCall = () => {\n    if (peerConnection.current) peerConnection.current.close();\n    if (mediaStream.current) {\n      mediaStream.current.getTracks().forEach(track => track.stop());\n    }\n    speechSynthesisRef.current.cancel(); // Stop speech synthesis\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      backgroundColor: '#f5f5f5',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(VideoContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"video-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: !isMuted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"video-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          ref: remoteVideoRef,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        color: 'black',\n        marginTop: '20px'\n      },\n      children: recognizedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleMute,\n        sx: {\n          backgroundColor: isMuted ? '#b0bec5' : '#2196f3',\n          borderRadius: '50%',\n          padding: '10px'\n        },\n        children: isMuted ? /*#__PURE__*/_jsxDEV(FaMicrophoneAltSlash, {\n          size: 20,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(FaMicrophone, {\n          size: 20,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleVideo,\n        sx: {\n          backgroundColor: isVideoOn ? '#4caf50' : '#f44336',\n          borderRadius: '50%',\n          padding: '10px'\n        },\n        children: isVideoOn ? /*#__PURE__*/_jsxDEV(FaVideo, {\n          size: 20,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(FaVideoSlash, {\n          size: 20,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EndCallButton, {\n        onClick: stopVideoCall,\n        children: /*#__PURE__*/_jsxDEV(FaPhoneAlt, {\n          size: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCallPage, \"1iPZCoEftH25BbWi/qvvfNRsFKo=\");\n_c5 = VideoCallPage;\nexport default VideoCallPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"VideoContainer\");\n$RefreshReg$(_c2, \"Video\");\n$RefreshReg$(_c3, \"ControlPanel\");\n$RefreshReg$(_c4, \"EndCallButton\");\n$RefreshReg$(_c5, \"VideoCallPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","IconButton","Fab","Typography","FaMicrophone","FaMicrophoneAltSlash","FaVideo","FaVideoSlash","FaPhoneAlt","styled","jsxDEV","_jsxDEV","VideoContainer","display","justifyContent","gap","position","width","maxWidth","height","_c","Video","objectFit","borderRadius","_c2","ControlPanel","bottom","left","transform","alignItems","zIndex","backgroundColor","padding","_c3","EndCallButton","color","fontSize","_c4","VideoCallPage","roomId","_s","isMuted","setIsMuted","isVideoOn","setIsVideoOn","recognizedText","setRecognizedText","localVideoRef","remoteVideoRef","peerConnection","mediaStream","socket","speechSynthesisRef","window","speechSynthesis","current","WebSocket","onopen","console","log","startVideoCall","onmessage","message","data","JSON","parse","handleReceivedMessage","onerror","error","close","interval","setInterval","captureFrame","clearInterval","navigator","mediaDevices","getUserMedia","video","audio","srcObject","videoWidth","canvas","document","createElement","videoHeight","ctx","getContext","drawImage","imageData","toDataURL","sendToSignRecognitionAPI","substring","response","fetch","method","headers","body","stringify","image","ok","Error","status","statusText","json","text","speakText","cancel","speech","SpeechSynthesisUtterance","lang","rate","pitch","volume","speak","toggleMute","getAudioTracks","forEach","track","enabled","toggleVideo","getVideoTracks","stopVideoCall","getTracks","stop","location","href","sx","flexDirection","children","className","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","variant","marginTop","onClick","size","_c5","$RefreshReg$"],"sources":["C:/Users/Krishang Darji/OneDrive/Desktop/Mudravani1/src/components/VideoCallPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Box, IconButton, Fab, Typography } from '@mui/material';\r\nimport { FaMicrophone, FaMicrophoneAltSlash, FaVideo, FaVideoSlash, FaPhoneAlt } from 'react-icons/fa';\r\nimport styled from '@emotion/styled';\r\n\r\nconst VideoContainer = styled(Box)(() => ({\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  gap: '20px',\r\n  position: 'relative',\r\n  width: '100%',\r\n  maxWidth: '1200px',\r\n  height: '500px',\r\n}));\r\n\r\nconst Video = styled('video')(() => ({\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  borderRadius: '8px',\r\n}));\r\n\r\nconst ControlPanel = styled(Box)(() => ({\r\n  position: 'fixed',\r\n  bottom: '20px',\r\n  left: '50%',\r\n  transform: 'translateX(-50%)',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: '25px',\r\n  zIndex: 10,\r\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  padding: '10px',\r\n  borderRadius: '8px',\r\n}));\r\n\r\nconst EndCallButton = styled(Fab)(() => ({\r\n  backgroundColor: '#f44336',\r\n  color: '#fff',\r\n  padding: '15px',\r\n  fontSize: '20px',\r\n  '&:hover': {\r\n    backgroundColor: '#d32f2f',\r\n  },\r\n}));\r\n\r\nconst VideoCallPage = ({ roomId }) => {\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isVideoOn, setIsVideoOn] = useState(true);\r\n  const [recognizedText, setRecognizedText] = useState('');\r\n  const localVideoRef = useRef(null);\r\n  const remoteVideoRef = useRef(null);\r\n  const peerConnection = useRef(null);\r\n  const mediaStream = useRef(null);\r\n  const socket = useRef(null);\r\n  const speechSynthesisRef = useRef(window.speechSynthesis);\r\n\r\n  useEffect(() => {\r\n    socket.current = new WebSocket('ws://localhost:3000');\r\n\r\n    socket.current.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      startVideoCall(roomId);\r\n    };\r\n\r\n    socket.current.onmessage = (message) => {\r\n      const data = JSON.parse(message.data);\r\n      handleReceivedMessage(data);\r\n    };\r\n\r\n    socket.current.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n    };\r\n\r\n    return () => {\r\n      if (socket.current) socket.current.close();\r\n    };\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(captureFrame, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const startVideoCall = async (roomId) => {\r\n    console.log('Starting video call for room:', roomId);\r\n    try {\r\n      mediaStream.current = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      if (localVideoRef.current) {\r\n        localVideoRef.current.srcObject = mediaStream.current;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accessing media devices:', error);\r\n    }\r\n  };\r\n\r\n  const handleReceivedMessage = (data) => {\r\n    console.log('Received message:', data);\r\n    // Handle WebRTC signaling or other communication\r\n  };\r\n\r\n  const captureFrame = async () => {\r\n    if (!localVideoRef.current || localVideoRef.current.videoWidth === 0) return;\r\n\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = localVideoRef.current.videoWidth;\r\n    canvas.height = localVideoRef.current.videoHeight;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(localVideoRef.current, 0, 0, canvas.width, canvas.height);\r\n    const imageData = canvas.toDataURL('image/jpeg');\r\n\r\n    sendToSignRecognitionAPI(imageData);\r\n  };\r\n\r\n//   const sendToSignRecognitionAPI = async (imageData) => {\r\n  \r\n//     try {\r\n//       const response = await fetch('http://127.0.0.1:3005/predict', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ image: imageData }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       if (data.text) {\r\n//         setRecognizedText(data.text);\r\n//         speakText(data.text);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error sending frame:', error);\r\n//     }\r\n//   };\r\n\r\nconst sendToSignRecognitionAPI = async (imageData) => {\r\n    try {\r\n        console.log(\"Sending image data:\", imageData.substring(0, 50)); // Log only first 50 chars\r\n\r\n        const response = await fetch('http://192.168.26.125:3005/predict', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ image: imageData }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`API Error: ${response.status} - ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        if (data.text) {\r\n            setRecognizedText(data.text);\r\n            speakText(data.text);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error sending frame:', error.message || error);\r\n    }\r\n};\r\n\r\n  const speakText = (text) => {\r\n    if (!text) return;\r\n\r\n    // Stop any ongoing speech synthesis before starting a new one\r\n    speechSynthesisRef.current.cancel();\r\n\r\n    const speech = new SpeechSynthesisUtterance(text);\r\n    speech.lang = 'en-US'; // Set language for better pronunciation\r\n    speech.rate = 1; // Adjust speed if needed\r\n    speech.pitch = 1;\r\n    speech.volume = 1;\r\n    speechSynthesisRef.current.speak(speech);\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    if (mediaStream.current) {\r\n      mediaStream.current.getAudioTracks().forEach(track => (track.enabled = isMuted));\r\n    }\r\n    setIsMuted(!isMuted);\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    if (mediaStream.current) {\r\n      mediaStream.current.getVideoTracks().forEach(track => (track.enabled = !isVideoOn));\r\n    }\r\n    setIsVideoOn(!isVideoOn);\r\n  };\r\n\r\n  const stopVideoCall = () => {\r\n    if (peerConnection.current) peerConnection.current.close();\r\n    if (mediaStream.current) {\r\n      mediaStream.current.getTracks().forEach(track => track.stop());\r\n    }\r\n    speechSynthesisRef.current.cancel(); // Stop speech synthesis\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', backgroundColor: '#f5f5f5', height: '100vh' }}>\r\n      <VideoContainer>\r\n        <Box className=\"video-wrapper\">\r\n          <Video ref={localVideoRef} autoPlay muted={!isMuted} />\r\n        </Box>\r\n        <Box className=\"video-wrapper\">\r\n          <Video ref={remoteVideoRef} autoPlay />\r\n        </Box>\r\n      </VideoContainer>\r\n\r\n      <Typography variant=\"h6\" sx={{ color: 'black', marginTop: '20px' }}>{recognizedText}</Typography>\r\n\r\n      <ControlPanel>\r\n        <IconButton onClick={toggleMute} sx={{ backgroundColor: isMuted ? '#b0bec5' : '#2196f3', borderRadius: '50%', padding: '10px' }}>\r\n          {isMuted ? <FaMicrophoneAltSlash size={20} color=\"white\" /> : <FaMicrophone size={20} color=\"white\" />}\r\n        </IconButton>\r\n\r\n        <IconButton onClick={toggleVideo} sx={{ backgroundColor: isVideoOn ? '#4caf50' : '#f44336', borderRadius: '50%', padding: '10px' }}>\r\n          {isVideoOn ? <FaVideo size={20} color=\"white\" /> : <FaVideoSlash size={20} color=\"white\" />}\r\n        </IconButton>\r\n\r\n        <EndCallButton onClick={stopVideoCall}>\r\n          <FaPhoneAlt size={25} />\r\n        </EndCallButton>\r\n      </ControlPanel>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VideoCallPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}