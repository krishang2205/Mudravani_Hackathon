{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krishang Darji\\\\OneDrive\\\\Desktop\\\\Mudravani1\\\\src\\\\components\\\\VideoCallPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, IconButton, Fab } from '@mui/material';\nimport { FaMicrophone, FaMicrophoneAltSlash, FaVideo, FaVideoSlash, FaPhoneAlt } from 'react-icons/fa';\nimport styled from '@emotion/styled';\nimport * as handpose from '@tensorflow-models/handpose'; // Import TensorFlow.js handpose model\nimport * as tf from '@tensorflow/tfjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoContainer = styled(Box)(() => ({\n  display: 'flex',\n  justifyContent: 'center',\n  gap: '20px',\n  position: 'relative',\n  width: '100%',\n  maxWidth: '1200px',\n  height: '500px'\n}));\n_c = VideoContainer;\nconst LocalVideoWrapper = styled(Box)(() => ({\n  position: 'absolute',\n  top: '20px',\n  left: '20px',\n  width: '120px',\n  height: '90px',\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  borderRadius: '8px',\n  overflow: 'hidden',\n  zIndex: 10\n}));\nconst Video = styled('video')(() => ({\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  borderRadius: '8px'\n}));\n_c2 = Video;\nconst ControlPanel = styled(Box)(() => ({\n  position: 'fixed',\n  bottom: '20px',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  display: 'flex',\n  alignItems: 'center',\n  gap: '25px',\n  zIndex: 10,\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  padding: '10px',\n  borderRadius: '8px'\n}));\n_c3 = ControlPanel;\nconst EndCallButton = styled(Fab)(() => ({\n  backgroundColor: '#f44336',\n  color: '#fff',\n  padding: '15px',\n  fontSize: '20px',\n  '&:hover': {\n    backgroundColor: '#d32f2f'\n  }\n}));\n_c4 = EndCallButton;\nconst VideoCallPage = ({\n  roomId\n}) => {\n  _s();\n  const [isMuted, setIsMuted] = useState(false);\n  const [isVideoOn, setIsVideoOn] = useState(true);\n  const [translatedText, setTranslatedText] = useState('');\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const peerConnection = useRef(null);\n  const mediaStream = useRef(null);\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = new WebSocket('ws://localhost:3000'); // Connect to WebSocket server\n\n    socket.current.onopen = () => {\n      console.log('WebSocket connection established');\n      startVideoCall(roomId);\n    };\n    socket.current.onmessage = message => {\n      const data = JSON.parse(message.data);\n      if (data.translatedText) {\n        setTranslatedText(data.translatedText); // Update translated text from WebSocket message\n      }\n    };\n    return () => {\n      socket.current.close();\n    };\n  }, [roomId]);\n  const startVideoCall = async roomId => {\n    try {\n      mediaStream.current = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = mediaStream.current;\n      }\n      peerConnection.current = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }] // STUN server\n      });\n      mediaStream.current.getTracks().forEach(track => {\n        peerConnection.current.addTrack(track, mediaStream.current);\n      });\n      peerConnection.current.onicecandidate = event => {\n        if (event.candidate) {\n          socket.current.send(JSON.stringify({\n            type: 'candidate',\n            candidate: event.candidate,\n            roomId\n          }));\n        }\n      };\n      peerConnection.current.ontrack = event => {\n        if (remoteVideoRef.current) {\n          remoteVideoRef.current.srcObject = event.streams[0];\n        }\n      };\n      const offer = await peerConnection.current.createOffer();\n      await peerConnection.current.setLocalDescription(offer);\n      socket.current.send(JSON.stringify({\n        type: 'offer',\n        offer,\n        roomId\n      }));\n    } catch (error) {\n      console.error('Error starting video call:', error);\n    }\n  };\n  const stopVideoCall = () => {\n    if (peerConnection.current) {\n      peerConnection.current.close();\n    }\n    if (mediaStream.current) {\n      mediaStream.current.getTracks().forEach(track => track.stop());\n    }\n    window.location.href = '/'; // Redirect to home\n  };\n  const handleReceivedMessage = async message => {\n    switch (message.type) {\n      case 'offer':\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(message.offer));\n        const answer = await peerConnection.current.createAnswer();\n        await peerConnection.current.setLocalDescription(answer);\n        socket.current.send(JSON.stringify({\n          type: 'answer',\n          answer,\n          roomId: message.roomId\n        }));\n        break;\n      case 'answer':\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(message.answer));\n        break;\n      case 'candidate':\n        if (message.candidate) {\n          await peerConnection.current.addIceCandidate(new RTCIceCandidate(message.candidate));\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Gesture detection with TensorFlow.js\n  const detectHandGesture = async videoElement => {\n    const model = await handpose.load();\n    const predictions = await model.estimateHands(videoElement);\n    if (predictions.length > 0) {\n      const gesture = 'detected-gesture'; // Replace with your gesture detection logic\n      socket.current.send(JSON.stringify({\n        gesture\n      })); // Send gesture data to backend\n    }\n  };\n  useEffect(() => {\n    const videoElement = localVideoRef.current;\n    const detectGestureLoop = () => {\n      detectHandGesture(videoElement);\n      requestAnimationFrame(detectGestureLoop);\n    };\n    detectGestureLoop(); // Start gesture detection loop\n  }, []);\n  const toggleMute = () => {\n    setIsMuted(prev => !prev);\n    mediaStream.current.getAudioTracks().forEach(track => {\n      track.enabled = !track.enabled;\n    });\n  };\n  const toggleVideo = () => {\n    setIsVideoOn(prev => !prev);\n    mediaStream.current.getVideoTracks().forEach(track => {\n      track.enabled = !track.enabled;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      backgroundColor: '#f5f5f5',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(VideoContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"video-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"video-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          ref: remoteVideoRef,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleMute,\n        sx: {\n          backgroundColor: isMuted ? '#b0bec5' : '#2196f3',\n          borderRadius: '50%',\n          padding: '10px'\n        },\n        children: isMuted ? /*#__PURE__*/_jsxDEV(FaMicrophoneAltSlash, {\n          size: 20,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(FaMicrophone, {\n          size: 20,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleVideo,\n        sx: {\n          backgroundColor: isVideoOn ? '#4caf50' : '#f44336',\n          borderRadius: '50%',\n          padding: '10px'\n        },\n        children: isVideoOn ? /*#__PURE__*/_jsxDEV(FaVideo, {\n          size: 20,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(FaVideoSlash, {\n          size: 20,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EndCallButton, {\n        onClick: stopVideoCall,\n        children: /*#__PURE__*/_jsxDEV(FaPhoneAlt, {\n          size: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: '20px',\n        fontSize: '18px',\n        color: '#333'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Translated Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: translatedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCallPage, \"mNglsqsBbLwGdDUQrimEJp0U/rE=\");\n_c5 = VideoCallPage;\nexport default VideoCallPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"VideoContainer\");\n$RefreshReg$(_c2, \"Video\");\n$RefreshReg$(_c3, \"ControlPanel\");\n$RefreshReg$(_c4, \"EndCallButton\");\n$RefreshReg$(_c5, \"VideoCallPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","IconButton","Fab","FaMicrophone","FaMicrophoneAltSlash","FaVideo","FaVideoSlash","FaPhoneAlt","styled","handpose","tf","jsxDEV","_jsxDEV","VideoContainer","display","justifyContent","gap","position","width","maxWidth","height","_c","LocalVideoWrapper","top","left","backgroundColor","borderRadius","overflow","zIndex","Video","objectFit","_c2","ControlPanel","bottom","transform","alignItems","padding","_c3","EndCallButton","color","fontSize","_c4","VideoCallPage","roomId","_s","isMuted","setIsMuted","isVideoOn","setIsVideoOn","translatedText","setTranslatedText","localVideoRef","remoteVideoRef","peerConnection","mediaStream","socket","current","WebSocket","onopen","console","log","startVideoCall","onmessage","message","data","JSON","parse","close","navigator","mediaDevices","getUserMedia","video","audio","srcObject","RTCPeerConnection","iceServers","urls","getTracks","forEach","track","addTrack","onicecandidate","event","candidate","send","stringify","type","ontrack","streams","offer","createOffer","setLocalDescription","error","stopVideoCall","stop","window","location","href","handleReceivedMessage","setRemoteDescription","RTCSessionDescription","answer","createAnswer","addIceCandidate","RTCIceCandidate","detectHandGesture","videoElement","model","load","predictions","estimateHands","length","gesture","detectGestureLoop","requestAnimationFrame","toggleMute","prev","getAudioTracks","enabled","toggleVideo","getVideoTracks","sx","flexDirection","children","className","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","marginTop","_c5","$RefreshReg$"],"sources":["C:/Users/Krishang Darji/OneDrive/Desktop/Mudravani1/src/components/VideoCallPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Box, IconButton, Fab } from '@mui/material';\r\nimport { FaMicrophone, FaMicrophoneAltSlash, FaVideo, FaVideoSlash, FaPhoneAlt } from 'react-icons/fa';\r\nimport styled from '@emotion/styled';\r\nimport * as handpose from '@tensorflow-models/handpose'; // Import TensorFlow.js handpose model\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\nconst VideoContainer = styled(Box)(() => ({\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  gap: '20px',\r\n  position: 'relative',\r\n  width: '100%',\r\n  maxWidth: '1200px',\r\n  height: '500px',\r\n}));\r\n\r\nconst LocalVideoWrapper = styled(Box)(() => ({\r\n  position: 'absolute',\r\n  top: '20px',\r\n  left: '20px',\r\n  width: '120px',\r\n  height: '90px',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  borderRadius: '8px',\r\n  overflow: 'hidden',\r\n  zIndex: 10,\r\n}));\r\n\r\nconst Video = styled('video')(() => ({\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  borderRadius: '8px',\r\n}));\r\n\r\nconst ControlPanel = styled(Box)(() => ({\r\n  position: 'fixed',\r\n  bottom: '20px',\r\n  left: '50%',\r\n  transform: 'translateX(-50%)',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: '25px',\r\n  zIndex: 10,\r\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  padding: '10px',\r\n  borderRadius: '8px',\r\n}));\r\n\r\nconst EndCallButton = styled(Fab)(() => ({\r\n  backgroundColor: '#f44336',\r\n  color: '#fff',\r\n  padding: '15px',\r\n  fontSize: '20px',\r\n  '&:hover': {\r\n    backgroundColor: '#d32f2f',\r\n  },\r\n}));\r\n\r\nconst VideoCallPage = ({ roomId }) => {\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isVideoOn, setIsVideoOn] = useState(true);\r\n  const [translatedText, setTranslatedText] = useState('');\r\n  const localVideoRef = useRef(null);\r\n  const remoteVideoRef = useRef(null);\r\n  const peerConnection = useRef(null);\r\n  const mediaStream = useRef(null);\r\n  const socket = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = new WebSocket('ws://localhost:3000'); // Connect to WebSocket server\r\n\r\n    socket.current.onopen = () => {\r\n      console.log('WebSocket connection established');\r\n      startVideoCall(roomId);\r\n    };\r\n\r\n    socket.current.onmessage = (message) => {\r\n      const data = JSON.parse(message.data);\r\n      if (data.translatedText) {\r\n        setTranslatedText(data.translatedText); // Update translated text from WebSocket message\r\n      }\r\n    };\r\n\r\n    return () => {\r\n      socket.current.close();\r\n    };\r\n  }, [roomId]);\r\n\r\n  const startVideoCall = async (roomId) => {\r\n    try {\r\n      mediaStream.current = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      });\r\n\r\n      if (localVideoRef.current) {\r\n        localVideoRef.current.srcObject = mediaStream.current;\r\n      }\r\n\r\n      peerConnection.current = new RTCPeerConnection({\r\n        iceServers: [{ urls: 'stun:stun.l.google.com:19302' }], // STUN server\r\n      });\r\n\r\n      mediaStream.current.getTracks().forEach((track) => {\r\n        peerConnection.current.addTrack(track, mediaStream.current);\r\n      });\r\n\r\n      peerConnection.current.onicecandidate = (event) => {\r\n        if (event.candidate) {\r\n          socket.current.send(\r\n            JSON.stringify({\r\n              type: 'candidate',\r\n              candidate: event.candidate,\r\n              roomId,\r\n            })\r\n          );\r\n        }\r\n      };\r\n\r\n      peerConnection.current.ontrack = (event) => {\r\n        if (remoteVideoRef.current) {\r\n          remoteVideoRef.current.srcObject = event.streams[0];\r\n        }\r\n      };\r\n\r\n      const offer = await peerConnection.current.createOffer();\r\n      await peerConnection.current.setLocalDescription(offer);\r\n\r\n      socket.current.send(\r\n        JSON.stringify({\r\n          type: 'offer',\r\n          offer,\r\n          roomId,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.error('Error starting video call:', error);\r\n    }\r\n  };\r\n\r\n  const stopVideoCall = () => {\r\n    if (peerConnection.current) {\r\n      peerConnection.current.close();\r\n    }\r\n    if (mediaStream.current) {\r\n      mediaStream.current.getTracks().forEach((track) => track.stop());\r\n    }\r\n    window.location.href = '/'; // Redirect to home\r\n  };\r\n\r\n  const handleReceivedMessage = async (message) => {\r\n    switch (message.type) {\r\n      case 'offer':\r\n        await peerConnection.current.setRemoteDescription(\r\n          new RTCSessionDescription(message.offer)\r\n        );\r\n        const answer = await peerConnection.current.createAnswer();\r\n        await peerConnection.current.setLocalDescription(answer);\r\n\r\n        socket.current.send(\r\n          JSON.stringify({\r\n            type: 'answer',\r\n            answer,\r\n            roomId: message.roomId,\r\n          })\r\n        );\r\n        break;\r\n\r\n      case 'answer':\r\n        await peerConnection.current.setRemoteDescription(\r\n          new RTCSessionDescription(message.answer)\r\n        );\r\n        break;\r\n\r\n      case 'candidate':\r\n        if (message.candidate) {\r\n          await peerConnection.current.addIceCandidate(\r\n            new RTCIceCandidate(message.candidate)\r\n          );\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Gesture detection with TensorFlow.js\r\n  const detectHandGesture = async (videoElement) => {\r\n    const model = await handpose.load();\r\n    const predictions = await model.estimateHands(videoElement);\r\n\r\n    if (predictions.length > 0) {\r\n      const gesture = 'detected-gesture'; // Replace with your gesture detection logic\r\n      socket.current.send(JSON.stringify({ gesture })); // Send gesture data to backend\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const videoElement = localVideoRef.current;\r\n    const detectGestureLoop = () => {\r\n      detectHandGesture(videoElement);\r\n      requestAnimationFrame(detectGestureLoop);\r\n    };\r\n\r\n    detectGestureLoop(); // Start gesture detection loop\r\n  }, []);\r\n\r\n  const toggleMute = () => {\r\n    setIsMuted((prev) => !prev);\r\n    mediaStream.current.getAudioTracks().forEach((track) => {\r\n      track.enabled = !track.enabled;\r\n    });\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    setIsVideoOn((prev) => !prev);\r\n    mediaStream.current.getVideoTracks().forEach((track) => {\r\n      track.enabled = !track.enabled;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', backgroundColor: '#f5f5f5', height: '100vh' }}>\r\n      <VideoContainer>\r\n        <Box className=\"video-wrapper\">\r\n          <Video ref={localVideoRef} autoPlay muted />\r\n        </Box>\r\n\r\n        <Box className=\"video-wrapper\">\r\n          <Video ref={remoteVideoRef} autoPlay />\r\n        </Box>\r\n      </VideoContainer>\r\n\r\n      <ControlPanel>\r\n        <IconButton onClick={toggleMute} sx={{ backgroundColor: isMuted ? '#b0bec5' : '#2196f3', borderRadius: '50%', padding: '10px' }}>\r\n          {isMuted ? <FaMicrophoneAltSlash size={20} color=\"white\" /> : <FaMicrophone size={20} color=\"white\" />}\r\n        </IconButton>\r\n\r\n        <IconButton onClick={toggleVideo} sx={{ backgroundColor: isVideoOn ? '#4caf50' : '#f44336', borderRadius: '50%', padding: '10px' }}>\r\n          {isVideoOn ? <FaVideo size={20} color=\"white\" /> : <FaVideoSlash size={20} color=\"white\" />}\r\n        </IconButton>\r\n\r\n        <EndCallButton onClick={stopVideoCall}>\r\n          <FaPhoneAlt size={25} />\r\n        </EndCallButton>\r\n      </ControlPanel>\r\n\r\n      <Box sx={{ marginTop: '20px', fontSize: '18px', color: '#333' }}>\r\n        <h3>Translated Text:</h3>\r\n        <p>{translatedText}</p>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VideoCallPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}