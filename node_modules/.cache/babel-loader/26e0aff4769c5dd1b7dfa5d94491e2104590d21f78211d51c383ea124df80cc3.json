{"ast":null,"code":"// Import the functions you need from the Firebase SDKs\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { getAnalytics } from \"firebase/analytics\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBvDd_JsoSPcWKl1DXFZIq6sDTFQo0_mEA\",\n  authDomain: \"mudravani-d1dae.firebaseapp.com\",\n  projectId: \"mudravani-d1dae\",\n  storageBucket: \"mudravani-d1dae.appspot.com\",\n  // ✅ Fixed Typo\n  messagingSenderId: \"182600888132\",\n  appId: \"1:182600888132:web:3cdb3eec8d77f405687111\",\n  measurementId: \"G-HFPWDE95QL\"\n};\n\n// ✅ Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\n// ✅ Initialize Firebase Authentication\nexport const auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\n\n// ✅ Authentication Functions\nexport const signUp = (email, password) => createUserWithEmailAndPassword(auth, email, password);\nexport const login = (email, password) => signInWithEmailAndPassword(auth, email, password);\nexport const googleSignIn = () => signInWithPopup(auth, provider);\nexport const logout = () => signOut(auth);","map":{"version":3,"names":["initializeApp","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","GoogleAuthProvider","signInWithPopup","getAnalytics","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","auth","provider","signUp","email","password","login","googleSignIn","logout"],"sources":["C:/Users/Krishang Darji/OneDrive/Desktop/Mudravani1/src/components/firebase.js"],"sourcesContent":["// Import the functions you need from the Firebase SDKs\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBvDd_JsoSPcWKl1DXFZIq6sDTFQo0_mEA\",\r\n  authDomain: \"mudravani-d1dae.firebaseapp.com\",\r\n  projectId: \"mudravani-d1dae\",\r\n  storageBucket: \"mudravani-d1dae.appspot.com\",  // ✅ Fixed Typo\r\n  messagingSenderId: \"182600888132\",\r\n  appId: \"1:182600888132:web:3cdb3eec8d77f405687111\",\r\n  measurementId: \"G-HFPWDE95QL\"\r\n};\r\n\r\n// ✅ Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\n// ✅ Initialize Firebase Authentication\r\nexport const auth = getAuth(app);\r\nconst provider = new GoogleAuthProvider();\r\n\r\n// ✅ Authentication Functions\r\nexport const signUp = (email, password) => createUserWithEmailAndPassword(auth, email, password);\r\nexport const login = (email, password) => signInWithEmailAndPassword(auth, email, password);\r\nexport const googleSignIn = () => signInWithPopup(auth, provider);\r\nexport const logout = () => signOut(auth);\r\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,8BAA8B,EAAEC,0BAA0B,EAAEC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,eAAe;AACjJ,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,iCAAiC;EAC7CC,SAAS,EAAE,iBAAiB;EAC5BC,aAAa,EAAE,6BAA6B;EAAG;EAC/CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGhB,aAAa,CAACQ,cAAc,CAAC;AACzC,MAAMS,SAAS,GAAGV,YAAY,CAACS,GAAG,CAAC;;AAEnC;AACA,OAAO,MAAME,IAAI,GAAGjB,OAAO,CAACe,GAAG,CAAC;AAChC,MAAMG,QAAQ,GAAG,IAAId,kBAAkB,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMe,MAAM,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAKpB,8BAA8B,CAACgB,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;AAChG,OAAO,MAAMC,KAAK,GAAGA,CAACF,KAAK,EAAEC,QAAQ,KAAKnB,0BAA0B,CAACe,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;AAC3F,OAAO,MAAME,YAAY,GAAGA,CAAA,KAAMlB,eAAe,CAACY,IAAI,EAAEC,QAAQ,CAAC;AACjE,OAAO,MAAMM,MAAM,GAAGA,CAAA,KAAMrB,OAAO,CAACc,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}